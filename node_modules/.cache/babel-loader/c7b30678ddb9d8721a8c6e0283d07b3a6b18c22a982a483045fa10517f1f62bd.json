{"ast":null,"code":"var _jsxFileName = \"/Users/camolo23/Documents/G24/react I/useEffect-y-consumo-de-API/prueba-api/src/components/MiApi.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MiApi = () => {\n  _s();\n  const [apiContent, setApiContent] = useState([]); // estado para guardar los datos obtenidos del llamado a la API\n  const [paisBuscado, setPaisBuscado] = useState(\"\"); // estado para guardar el país tipeado en el input de búsqueda por país\n  const [filtroDePaisActivado, setFiltroDePaisActivado] = useState(false); // estado para registrar si se filtro o no por país\n  const [listaFiltrada, setListaFiltrada] = useState([]); // estado para guardar el resultado del filter aplicado a apiContent y que usaremos para renderizar los datos del país buscado\n  const [ordenPoblacionUno, setOrdenPoblacionUno] = useState(false); // estado para registrar si se filtro por país con mayor población\n  const [listaOrdenada, setListaOrdenada] = useState([]);\n  const firstUrl = 'https://restcountries.com/v2/all';\n  const llamarApi = async endPoint => {\n    // función para obtener los datos de la API\n    const url = endPoint;\n    const response = await fetch(url);\n    const data = await response.json();\n    const orderedData = data.sort((a, b) => a.translations.es.localeCompare(b.translations.es)); // método usado para ordenar apiContent a una muestra más cómoda y en español\n    setApiContent(orderedData);\n  };\n  useEffect(() => {\n    // hook para llamar a la API\n    llamarApi(firstUrl);\n  }, []);\n  const capturarPais = e => {\n    // función para registrar el país tipeado por el usuario y guardarlo en un estado\n    setPaisBuscado(e.target.value);\n  };\n  const detallesPais = () => {\n    // función para filtrar apiContent en base al país tipeado por el usuario\n    setOrdenPoblacionUno(false);\n    setFiltroDePaisActivado(true);\n    setListaFiltrada(apiContent.filter(country => country.translations.es === paisBuscado));\n    setPaisBuscado(\"\");\n  };\n  const handleKeyDown = event => {\n    // función para ejecutar búsqueda pulsando la tecla enter\n    if (event.key === 'Enter') {\n      detallesPais();\n    }\n  };\n  const ordenarLista = () => {\n    // función para ordenar lista según criterio deseado\n    setFiltroDePaisActivado(false);\n    setOrdenPoblacionUno(true);\n    setListaOrdenada(apiContent.sort((a, b) => a.population < b.population));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-start container bg-dark text-white p-3 m-auto border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-3 text-center\",\n          children: \"B\\xFAsqueda por pa\\xEDs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-light\",\n            onClick: detallesPais,\n            type: \"button\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            \"aria-label\": \"Search for a country\",\n            \"aria-autocomplete\": \"both\",\n            \"aria-controls\": \"autocomplete-results\",\n            type: \"text\",\n            className: \"form-control\",\n            onChange: capturarPais,\n            value: paisBuscado,\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-3 text-center\",\n          children: \"M\\xE1s informaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-light dropdown-toggle container\",\n            type: \"button\",\n            \"data-bs-toggle\": \"dropdown\",\n            \"aria-expanded\": \"false\",\n            children: \"Filtros disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-menu container text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                onClick: ordenarLista,\n                href: \"#\",\n                children: \"Ordenar por mayor poblaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Ordenar por menor poblaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Ordenar por mayor \\xE1rea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Ordenar por menor \\xE1rea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Banderas de Europa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Banderas de America del Sur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Banderas de America Central\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Banderas de America del Norte\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Banderas de Africa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"dropdown-item\",\n                href: \"#\",\n                children: \"Banderas de As\\xEDa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row p-5 m-0\",\n      children: filtroDePaisActivado === true ? listaFiltrada.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            className: \"img-fluid\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-dark\",\n              children: [\"Pa\\xEDs: \", country.translations.es]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-dark\",\n              children: [\"Continente: \", country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-dark\",\n              children: [\"Sub-Continente: \", country.subregion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-dark\",\n              children: [\"Capital: \", country.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-dark\",\n              children: [\"Poblaci\\xF3n: \", Intl.NumberFormat('es-CL').format(country.population), \" habitantes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item list-group-item-dark\",\n              children: [\"Area: \", Intl.NumberFormat('es-CL').format(country.area), \" km\\xB2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, country.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)) : ordenPoblacionUno === true ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group container list-group-numbered col\",\n        children: listaOrdenada.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item list-group-item-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"\",\n            style: {\n              width: \"16px\"\n            },\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), \"Pa\\xEDs: \", country.translations.es, \" - Poblaci\\xF3n: \", Intl.NumberFormat('es-CL').format(country.population), \" habitantes.\"]\n        }, country.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this) : apiContent.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-2 bg-dark text-white\",\n          style: {\n            width: \"200px\",\n            height: \"315px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"p-2\",\n            style: {\n              height: \"140px\"\n            },\n            src: country.flag,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: country.translations.es\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text mb-0\",\n              children: [\"Regi\\xF3n: \", country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Capital: \", country.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }, this)\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MiApi, \"PhJ8rj9zWt5oXbbOMMfkHP5FTIs=\");\n_c = MiApi;\nexport default MiApi;\n\n/* filtroDePaisActivado === false && ordenPoblacionUno === false ?\n                    apiContent.map((country) => (\n                        <div key={country.name} className='col'>\n                            <div className='card mb-2 bg-dark text-white' style={{ width: \"200px\", height: \"315px\" }}>\n                                <img className='p-2' style={{ height: \"140px\" }} src={country.flag} alt=\"\" />\n                                <div className='card-body'>\n                                    <h5 className='card-title'>{country.translations.es}</h5>\n                                    <p className='card-text mb-0'>Región: {country.region}</p>\n                                    <p className='card-text'>Capital: {country.capital}</p>\n                                </div>\n                            </div>\n                        </div>))\n\n\n\nlistaFiltrada.map(country =>\n    <div key={country.name} className=\"row align-items-center\">\n        <div className=\"col-6\">\n            <img src={country.flag} className=\"img-fluid\" alt=\"\" />\n        </div>\n        <div className=\"col-4 container-fluid\">\n            <ul className='list-group'>\n                <li className='list-group-item list-group-item-dark'>País: {country.translations.es}</li>\n                <li className='list-group-item list-group-item-dark'>Continente: {country.region}</li>\n                <li className='list-group-item list-group-item-dark'>Sub-Continente: {country.subregion}</li>\n                <li className='list-group-item list-group-item-dark'>Capital: {country.capital}</li>\n                <li className='list-group-item list-group-item-dark'>Población: {Intl.NumberFormat('es-CL').format(country.population)} habitantes</li>\n                <li className='list-group-item list-group-item-dark'>Area: {Intl.NumberFormat('es-CL').format(country.area)} km²</li>\n            </ul>\n        </div>\n    </div>)\n\n\n<ul className='list-group container list-group-numbered col'>\n                            listaOrdenada.map((country) => (\n                            <li className='list-group-item list-group-item-dark'\n                                key={country.name}>\n                                <img src={country.flag} alt=\"\" style={{ width: \"16px\" }} className='me-2' />\n                                País: {country.translations.es} -\n                                Población: {Intl.NumberFormat('es-CL').format(country.population)} habitantes.</li>\n                            ))\n\n</ul> */\nvar _c;\n$RefreshReg$(_c, \"MiApi\");","map":{"version":3,"names":["React","useState","useEffect","MiApi","apiContent","setApiContent","paisBuscado","setPaisBuscado","filtroDePaisActivado","setFiltroDePaisActivado","listaFiltrada","setListaFiltrada","ordenPoblacionUno","setOrdenPoblacionUno","listaOrdenada","setListaOrdenada","firstUrl","llamarApi","endPoint","url","response","fetch","data","json","orderedData","sort","a","b","translations","es","localeCompare","capturarPais","e","target","value","detallesPais","filter","country","handleKeyDown","event","key","ordenarLista","population","map","flag","region","subregion","capital","Intl","NumberFormat","format","area","name","width","height"],"sources":["/Users/camolo23/Documents/G24/react I/useEffect-y-consumo-de-API/prueba-api/src/components/MiApi.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\n\nconst MiApi = () => {\n    const [apiContent, setApiContent] = useState([]); // estado para guardar los datos obtenidos del llamado a la API\n    const [paisBuscado, setPaisBuscado] = useState(\"\"); // estado para guardar el país tipeado en el input de búsqueda por país\n    const [filtroDePaisActivado, setFiltroDePaisActivado] = useState(false); // estado para registrar si se filtro o no por país\n    const [listaFiltrada, setListaFiltrada] = useState([]); // estado para guardar el resultado del filter aplicado a apiContent y que usaremos para renderizar los datos del país buscado\n    const [ordenPoblacionUno, setOrdenPoblacionUno] = useState(false); // estado para registrar si se filtro por país con mayor población\n    const [listaOrdenada, setListaOrdenada] = useState([]);\n\n    const firstUrl = 'https://restcountries.com/v2/all';\n\n    const llamarApi = async (endPoint) => { // función para obtener los datos de la API\n        const url = endPoint;\n        const response = await fetch(url);\n        const data = await response.json();\n        const orderedData = data.sort((a, b) => a.translations.es.localeCompare(b.translations.es)); // método usado para ordenar apiContent a una muestra más cómoda y en español\n        setApiContent(orderedData);\n    }\n\n    useEffect(() => { // hook para llamar a la API\n        llamarApi(firstUrl);\n    }, []);\n\n    const capturarPais = (e) => { // función para registrar el país tipeado por el usuario y guardarlo en un estado\n        setPaisBuscado(e.target.value);\n    };\n\n    const detallesPais = () => { // función para filtrar apiContent en base al país tipeado por el usuario\n        setOrdenPoblacionUno(false);\n        setFiltroDePaisActivado(true);\n        setListaFiltrada(apiContent.filter(country => country.translations.es === paisBuscado));\n        setPaisBuscado(\"\");\n    };\n\n    const handleKeyDown = event => { // función para ejecutar búsqueda pulsando la tecla enter\n        if (event.key === 'Enter') {\n            detallesPais();\n        }\n    };\n\n    const ordenarLista = () => { // función para ordenar lista según criterio deseado\n        setFiltroDePaisActivado(false);\n        setOrdenPoblacionUno(true);\n        setListaOrdenada(apiContent.sort((a, b) => a.population < b.population));\n    }\n\n    return (\n        <>\n            <div className=\"row align-items-start container bg-dark text-white p-3 m-auto border rounded\">\n                <div className=\"col\">\n                    <h5 className='mb-3 text-center'>Búsqueda por país</h5>\n                    <div className=\"input-group mb-3\">\n                        <button className=\"btn btn-outline-light\" onClick={detallesPais} type=\"button\">Buscar</button>\n                        <input aria-label='Search for a country'\n                            aria-autocomplete='both'\n                            aria-controls='autocomplete-results'\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={capturarPais}\n                            value={paisBuscado}\n                            onKeyDown={handleKeyDown} />\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <h5 className='mb-3 text-center'>Más información</h5>\n                    <div className=\"dropdown\">\n                        <button className=\"btn btn-outline-light dropdown-toggle container\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                            Filtros disponibles\n                        </button>\n                        <ul className=\"dropdown-menu container text-center\">\n                            <li><a className=\"dropdown-item\" onClick={ordenarLista} href=\"#\">Ordenar por mayor población</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Ordenar por menor población</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Ordenar por mayor área</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Ordenar por menor área</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Banderas de Europa</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Banderas de America del Sur</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Banderas de America Central</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Banderas de America del Norte</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Banderas de Africa</a></li>\n                            <li><a className=\"dropdown-item\" href=\"#\">Banderas de Asía</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <div className='row p-5 m-0'>\n\n                {filtroDePaisActivado === true ?\n\n                    listaFiltrada.map(country =>\n                        <div key={country.name} className=\"row align-items-center\">\n                            <div className=\"col-6\">\n                                <img src={country.flag} className=\"img-fluid\" alt=\"\" />\n                            </div>\n                            <div className=\"col-4 container-fluid\">\n                                <ul className='list-group'>\n                                    <li className='list-group-item list-group-item-dark'>País: {country.translations.es}</li>\n                                    <li className='list-group-item list-group-item-dark'>Continente: {country.region}</li>\n                                    <li className='list-group-item list-group-item-dark'>Sub-Continente: {country.subregion}</li>\n                                    <li className='list-group-item list-group-item-dark'>Capital: {country.capital}</li>\n                                    <li className='list-group-item list-group-item-dark'>Población: {Intl.NumberFormat('es-CL').format(country.population)} habitantes</li>\n                                    <li className='list-group-item list-group-item-dark'>Area: {Intl.NumberFormat('es-CL').format(country.area)} km²</li>\n                                </ul>\n                            </div>\n                        </div>)\n\n                    :\n\n                    ordenPoblacionUno === true ?\n\n                    <ul className='list-group container list-group-numbered col'>\n                    {listaOrdenada.map((country) => (\n                    <li className='list-group-item list-group-item-dark'\n                        key={country.name}>\n                        <img src={country.flag} alt=\"\" style={{ width: \"16px\" }} className='me-2' />\n                        País: {country.translations.es} -\n                        Población: {Intl.NumberFormat('es-CL').format(country.population)} habitantes.</li>\n                    )) }\n\n                </ul>\n\n                        :\n\n                        apiContent.map((country) => (\n                            <div key={country.name} className='col'>\n                                <div className='card mb-2 bg-dark text-white' style={{ width: \"200px\", height: \"315px\" }}>\n                                    <img className='p-2' style={{ height: \"140px\" }} src={country.flag} alt=\"\" />\n                                    <div className='card-body'>\n                                        <h5 className='card-title'>{country.translations.es}</h5>\n                                        <p className='card-text mb-0'>Región: {country.region}</p>\n                                        <p className='card-text'>Capital: {country.capital}</p>\n                                    </div>\n                                </div>\n                            </div>))\n\n                }\n\n            </div>\n        </>\n    )\n}\n\nexport default MiApi\n\n\n\n/* filtroDePaisActivado === false && ordenPoblacionUno === false ?\n                    apiContent.map((country) => (\n                        <div key={country.name} className='col'>\n                            <div className='card mb-2 bg-dark text-white' style={{ width: \"200px\", height: \"315px\" }}>\n                                <img className='p-2' style={{ height: \"140px\" }} src={country.flag} alt=\"\" />\n                                <div className='card-body'>\n                                    <h5 className='card-title'>{country.translations.es}</h5>\n                                    <p className='card-text mb-0'>Región: {country.region}</p>\n                                    <p className='card-text'>Capital: {country.capital}</p>\n                                </div>\n                            </div>\n                        </div>))\n\n\n\nlistaFiltrada.map(country =>\n    <div key={country.name} className=\"row align-items-center\">\n        <div className=\"col-6\">\n            <img src={country.flag} className=\"img-fluid\" alt=\"\" />\n        </div>\n        <div className=\"col-4 container-fluid\">\n            <ul className='list-group'>\n                <li className='list-group-item list-group-item-dark'>País: {country.translations.es}</li>\n                <li className='list-group-item list-group-item-dark'>Continente: {country.region}</li>\n                <li className='list-group-item list-group-item-dark'>Sub-Continente: {country.subregion}</li>\n                <li className='list-group-item list-group-item-dark'>Capital: {country.capital}</li>\n                <li className='list-group-item list-group-item-dark'>Población: {Intl.NumberFormat('es-CL').format(country.population)} habitantes</li>\n                <li className='list-group-item list-group-item-dark'>Area: {Intl.NumberFormat('es-CL').format(country.area)} km²</li>\n            </ul>\n        </div>\n    </div>)\n\n\n<ul className='list-group container list-group-numbered col'>\n                            listaOrdenada.map((country) => (\n                            <li className='list-group-item list-group-item-dark'\n                                key={country.name}>\n                                <img src={country.flag} alt=\"\" style={{ width: \"16px\" }} className='me-2' />\n                                País: {country.translations.es} -\n                                Población: {Intl.NumberFormat('es-CL').format(country.population)} habitantes.</li>\n                            ))\n\n</ul> */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}